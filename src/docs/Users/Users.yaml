openapi: 3.0.0
info:
  title: Users
  version: 1.0.0
  description: Documentation of the Users API using Swagger.

paths:
  /api/users:
    get:
      summary: Get all users
      description: Returns a list of all registered users.
      tags:
        - Users
      parameters:
        - name: limit
          in: query
          description: Maximum number of users to return.
          required: false
          schema:
            type: integer
            minimum: 1
        - name: sort
          in: query
          description: Sorting order for the users (e.g., "name:asc", "name:desc").
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Page number for pagination.
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful response. Returns the list of users.
    post:
      summary: Create a new user
      description: Creates a new user with the provided information.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      security:
        - BearerAuth: []
      responses:
        '201':
          description: User created successfully.
        '400':
          description: Error in the request. Verify the data sent.

  /api/users/{uId}:
    get:
      summary: Get a user by ID
      description: Returns a specific user based on the provided ID.
      tags:
        - Users
      parameters:
        - name: uId
          in: path
          description: ID of the user to retrieve.
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful response. Returns the user details.
        '404':
          description: User not found.
    put:
      summary: Update a user by ID
      description: Updates the data of an existing user.
      tags:
        - Users
      parameters:
        - name: uId
          in: path
          description: ID of the user to update.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User updated successfully.
        '404':
          description: User not found.
        '400':
          description: Error in the request. Verify the data sent.
    delete:
      summary: Delete a user by ID
      description: Deletes an existing user based on the provided ID.
      tags:
        - Users
      parameters:
        - name: uId
          in: path
          description: ID of the user to delete.
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        '204':
          description: User deleted successfully.
        '404':
          description: User not found.

components:
  schemas:
    UserInput:
      type: object
      required:
        - firstName
        - lastName
        - email
        - password
        - role
      properties:
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: integer
          default: 18
        email:
          type: string
          format: email
        password:
          type: string
        enable:
          type: boolean
          default: true
        role:
          type: string
          description: ID of the user's role (must exist in the roles collection).