{
	"info": {
		"_postman_id": "392b8735-752f-4a38-af54-e90f41dd5367",
		"name": "Coder Backend",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26505099"
	},
	"item": [
		{
			"name": "Cart",
			"item": [
				{
					"name": "getOne",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has cart_id\"] = _.has(jsonData, 'cartId')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/carts/{{CART_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"carts",
								"{{CART_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has new_cart\"] = _.has(jsonData, 'newCart')\r",
									"\r",
									"pm.environment.set('CART_ID', jsonData.newCart.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"user\": \"64f249eecc6dabb7c13a435f\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/carts",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"carts"
							]
						}
					},
					"response": []
				},
				{
					"name": "addProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Message is Added product to cart.\"] = jsonData.message === 'Added product to cart.';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"quantity\":1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/carts/{{CART_ID}}/addproduct/6453cd18581e99b345fc90de",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"carts",
								"{{CART_ID}}",
								"addproduct",
								"6453cd18581e99b345fc90de"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Message is Product deleted.\"] = jsonData.message === 'Product deleted.';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/carts/{{CART_ID}}/deleteproduct/6453cd18581e99b345fc90de",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"carts",
								"{{CART_ID}}",
								"deleteproduct",
								"6453cd18581e99b345fc90de"
							]
						}
					},
					"response": []
				},
				{
					"name": "cleanProducts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Message is Cart updated.\"] = jsonData.message === 'Cart updated.';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/carts/{{CART_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"carts",
								"{{CART_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAllProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Message is All Product deleted.\"] = jsonData.message === 'All Product deleted.';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/carts/{{CART_ID}}/products/6453cd18581e99b345fc90de",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"carts",
								"{{CART_ID}}",
								"products",
								"6453cd18581e99b345fc90de"
							]
						}
					},
					"response": []
				},
				{
					"name": "Purchase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Message is Purchase completed!\"] = jsonData.message === 'Purchase completed!';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/carts/{{CART_ID}}/purchase",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"carts",
								"{{CART_ID}}",
								"purchase"
							]
						}
					},
					"response": []
				},
				{
					"name": "getOneByUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has Cart\"] = _.has(jsonData, 'Cart')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/carts/user/64f0ee235807c9b687910842",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"carts",
								"user",
								"64f0ee235807c9b687910842"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has payload\"] = _.has(jsonData, 'payload');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/products",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "sort",
									"value": "asc",
									"disabled": true
								},
								{
									"key": "title",
									"value": "pure",
									"disabled": true
								},
								{
									"key": "page",
									"value": "",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "12",
									"disabled": true
								},
								{
									"key": "category",
									"value": "Drama",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getOne",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has getOneProduct\"] = _.has(jsonData, 'getOneProduct');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/products/{{PRODUCT_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"products",
								"{{PRODUCT_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has newProduct\"] = _.has(jsonData, 'newProduct');\r",
									"\r",
									"pm.environment.set('PRODUCT_ID', jsonData.newProduct.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Producto Nuevo\",\r\n  \"description\": \"Producto nuevo\",\r\n  \"price\": 200,\r\n  \"code\": 1232112123123123234,\r\n  \"status\": true,\r\n  \"stock\": 10,\r\n  \"category\": \"Action\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/products",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has message\"] = _.has(jsonData, 'message');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"price\": 1600\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/products/{{PRODUCT_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"products",
								"{{PRODUCT_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteOne",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/products/{{PRODUCT_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"products",
								"{{PRODUCT_ID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sessions",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has access_token\"] = _.has(jsonData, 'token')\r",
									"\r",
									"pm.environment.set('ACCESS_TOKEN', jsonData.token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"admin@admin.com\",\r\n  \"password\": \"admin1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sessions/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sessions",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has invalid_token\"] = _.has(jsonData, 'token')\r",
									"\r",
									"pm.environment.set('INVALID_TOKEN', jsonData.token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/sessions/logout/{{ACCESS_TOKEN}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sessions",
								"logout",
								"{{ACCESS_TOKEN}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has user\"] = _.has(jsonData, 'user')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"admin@admin.com\",\r\n  \"password\": \"admin1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sessions/current",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sessions",
								"current"
							]
						}
					},
					"response": []
				},
				{
					"name": "SignUp",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has user\"] = _.has(jsonData, 'user')\r",
									"\r",
									"pm.environment.set('USER_EMAIL', jsonData.user.email)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"Pepe\",\r\n  \"lastName\": \"Coder\",\r\n  \"age\": 22,\r\n  \"email\": \"pepecoder@gmail.com\",\r\n  \"password\": \"pepe1234\",\r\n  \"role\": \"admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sessions/signup",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sessions",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Message is Email was send.\"] = jsonData.message === 'Email was send.';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"pepecoder@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sessions/forgotpassword",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sessions",
								"forgotpassword"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Message is Password was changed\"] = jsonData.message === 'Password was changed.';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"pepe1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/sessions/resetpassword/{{ACCESS_TOKEN}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sessions",
								"resetpassword",
								"{{ACCESS_TOKEN}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has refresh_token\"] = _.has(jsonData, 'token')\r",
									"\r",
									"pm.environment.set('REFRESH_TOKEN', jsonData.token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/sessions/refreshtoken",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"sessions",
								"refreshtoken"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has payload\"] = _.has(jsonData, 'payload');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "sort",
									"value": "desc",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "3",
									"disabled": true
								},
								{
									"key": "firstName",
									"value": "Pepe",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getOne",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has getOneUser\"] = _.has(jsonData, 'getOneUser');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users/64f249eecc6dabb7c13a435f",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"64f249eecc6dabb7c13a435f"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has newUser\"] = _.has(jsonData, 'newUser');\r",
									"\r",
									"pm.environment.set('USER_ID', jsonData.newUser.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"Luis\",\r\n  \"lastName\": \"Miguel\",\r\n  \"age\": 58,\r\n  \"email\": \"luis@gmail.com\",\r\n  \"password\": \"luis1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has message\"] = _.has(jsonData, 'message');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"age\": 67\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/users/{{USER_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"{{USER_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteOne",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users/{{USER_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								"{{USER_ID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Roles",
			"item": [
				{
					"name": "getOne",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has getOneRole\"] = _.has(jsonData, 'getOneRole');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/roles/{{ROLE_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"roles",
								"{{ROLE_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has newRole\"] = _.has(jsonData, 'newRole');\r",
									"\r",
									"pm.environment.set('ROLE_ID', jsonData.newRole.id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"prueba\",\r\n  \"permissions\": {\r\n    \"roles\": [ \"create\", \"getList\", \"getOne\", \"update\", \"delete\" ],\r\n    \"users\": [ \"create\", \"getList\", \"getOne\", \"update\", \"delete\" ],\r\n    \"sessions\": [ \"login\", \"register\", \"current\" ],\r\n    \"products\": [ \"create\", \"getList\", \"getOne\", \"update\", \"delete\" ],\r\n    \"carts\": [\r\n      \"create\",\r\n      \"getOne\",\r\n      \"cleanProducts\",\r\n      \"deleteProduct\",\r\n      \"addProduct\",\r\n      \"deleteAllProducts\"\r\n    ],\r\n    \"tickets\": [ \"create\", \"getList\", \"getOne\", \"update\", \"delete\" ]\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/roles/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"roles",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has message\"] = _.has(jsonData, 'message');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"permissions\":{\r\n      \"roles\": [\"create\", \"getList\", \"getOne\", \"update\", \"delete\"],\r\n      \"users\": [\"create\", \"getList\", \"getOne\", \"update\", \"delete\"],\r\n      \"sessions\": [\"login\", \"register\", \"current\"],\r\n      \"products\": [\"create\", \"getList\", \"getOne\", \"update\", \"delete\"],\r\n      \"carts\": [\"create\", \"getOne\", \"cleanProducts\", \"deleteProducts\", \"addProduct\"]\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/roles/{{ROLE_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"roles",
								"{{ROLE_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteOne",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/roles/{{ROLE_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"roles",
								"{{ROLE_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has payload\"] = _.has(jsonData, 'payload');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/roles",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"roles"
							],
							"query": [
								{
									"key": "sort",
									"value": "desc",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "1",
									"disabled": true
								},
								{
									"key": "firstName",
									"value": "Pepe",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Emails",
			"item": [
				{
					"name": "Send",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Message is Email has sended successfully\"] = jsonData.message === 'Email has sended successfully';"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"payer\": {\r\n            \"first_name\": \"Pepe\",\r\n            \"last_name\": \"Coder\"\r\n        },\r\n        \"products\": [\r\n            {\r\n                \"title\": \"Producto 1\"\r\n            },\r\n            {\r\n                \"title\": \"Producto 2\"\t\r\n            }\r\n        ],\r\n        \"mount\": 1111,\r\n        \"purchase_datetime\": \"2023-08-28T19:09:12.372+00:00\",\r\n        \"code\": \"123123\"\r\n    },\r\n    \"template\": \"purchaseCart\",\r\n    \"email\": \"pepecoder@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/emails",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"emails"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tickets",
			"item": [
				{
					"name": "getOne",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has getOneTicket\"] = _.has(jsonData, 'getOneTicket');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/tickets/{{TICKET_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tickets",
								"{{TICKET_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has newTicket\"] = _.has(jsonData, 'newTicket');\r",
									"\r",
									"pm.environment.set('TICKET_ID', jsonData.newTicket.id)\r",
									"pm.environment.set('PAYMENT_ID', jsonData.newTicket.information.payment_id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"EjemploDeCodigo\",\r\n  \"purchase_datetime\": \"2023-09-05T12:00:00Z\",\r\n  \"information\": {\r\n    \"payer\": {\r\n      \"address\": {\r\n        \"street_name\": \"EjemploCalle\",\r\n        \"street_number\": \"123\",\r\n        \"zip_code\": \"12345\"\r\n      },\r\n      \"first_name\": \"EjemploNombre\",\r\n      \"last_name\": \"EjemploApellido\",\r\n      \"identification\": {\r\n        \"number\": \"123456789\",\r\n        \"type\": \"EjemploTipoIdentificación\"\r\n      },\r\n      \"phone\": {\r\n        \"area_code\": \"123\",\r\n        \"number\": \"4567890\"\r\n      },\r\n      \"email\": \"ejemplo@email.com\"\r\n    },\r\n    \"payment_id\": \"EjemploIDPago\",\r\n    \"products\": [\r\n      {\r\n        \"name\": \"EjemploProducto1\",\r\n        \"quantity\": 2,\r\n        \"price\": 10.99\r\n      },\r\n      {\r\n        \"name\": \"EjemploProducto2\",\r\n        \"quantity\": 1,\r\n        \"price\": 20.99\r\n      }\r\n    ],\r\n    \"mount\": 42.97,\r\n    \"method\": \"EjemploMétodoPago\",\r\n    \"card\": \"EjemploNúmeroTarjeta\",\r\n    \"state_transaction\": \"EjemploEstadoTransacción\",\r\n    \"installments\": 3\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tickets",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tickets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has message\"] = _.has(jsonData, 'message');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"information.payer.email\": \"ejemplo2@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/tickets/{{TICKET_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tickets",
								"{{TICKET_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteOne",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/tickets/{{TICKET_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tickets",
								"{{TICKET_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has payload\"] = _.has(jsonData, 'payload');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/tickets",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tickets"
							],
							"query": [
								{
									"key": "sort",
									"value": "desc",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "1",
									"disabled": true
								},
								{
									"key": "firstName",
									"value": "Pepe",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "getOneByPaymentId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"tests[\"Response has getOneTicket\"] = _.has(jsonData, 'getOneTicket');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ACCESS_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/tickets/payment/{{PAYMENT_ID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"tickets",
								"payment",
								"{{PAYMENT_ID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Payments",
			"item": [
				{
					"name": "Mercado Pago",
					"item": [
						{
							"name": "Create Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"tests[\"Response has url_payment\"] = _.has(jsonData, 'payment.url_payment');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ACCESS_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"order\": [\r\n    {\r\n        \"title\": \"Mouse Hyperx RGB\",\r\n        \"unit_price\": 500,\r\n        \"currency_id\": \"ARS\",\r\n        \"quantity\": 1\r\n    },\r\n     {\r\n        \"title\": \"Teclado Logitech\",\r\n        \"unit_price\": 100,\r\n        \"currency_id\": \"ARS\",\r\n        \"quantity\": 1\r\n    }\r\n  ],\r\n  \"payer\":{\r\n    \"name\": \"Juan\",\r\n    \"surname\": \"Lopez\",\r\n    \"email\": \"juanlopez@gmail.com\",\r\n    \"phone\": {\r\n        \"area_code\": \"11\",\r\n        \"number\": 44444444\r\n    },\r\n    \"identification\": {\r\n        \"type\": \"DNI\",\r\n        \"number\": \"12345678\"\r\n    },\r\n    \"address\": {\r\n        \"street_name\": \"Street\",\r\n        \"street_number\": 123,\r\n        \"zip_code\": \"5700\"\r\n    }\r\n  },\r\n  \"service\": \"mercadopago\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/payments/create-order",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"payments",
										"create-order"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Paypal",
					"item": [
						{
							"name": "Create Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"tests[\"Status code is 201\"] = responseCode.code === 201;\r",
											"\r",
											"var jsonData = JSON.parse(responseBody);\r",
											"tests[\"Response has url_payment\"] = _.has(jsonData, 'payment.url_payment');"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ACCESS_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"service\": \"paypal\",\r\n  \"order\": {\r\n        \"amount\": {\r\n            \"value\": \"7\",\r\n            \"currency_code\": \"USD\",\r\n            \"breakdown\": {\r\n                \"item_total\": {\r\n                    \"value\": \"7\",\r\n                    \"currency_code\": \"USD\"\r\n                }\r\n            }\r\n        },\r\n        \"items\": \r\n        [\r\n            {\r\n                \"name\": \"Hafer\",\r\n                \"unit_amount\": {\r\n                    \"value\": \"3\",\r\n                    \"currency_code\": \"USD\"\r\n                },\r\n                \"quantity\": \"1\"\r\n            },\r\n            {\r\n                \"name\": \"Discount\",\r\n                \"unit_amount\": {\r\n                    \"value\": \"4\",\r\n                    \"currency_code\": \"USD\"\r\n                },\r\n                \"quantity\": \"1\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/api/payments/create-order",
									"host": [
										"{{URL}}"
									],
									"path": [
										"api",
										"payments",
										"create-order"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}